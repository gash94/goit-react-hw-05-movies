{"version":3,"file":"static/js/530.cbbc04fc.chunk.js","mappings":"qPACA,EAA4B,0BAA5B,EAAmE,2BAAnE,EAAiH,iCAAjH,EAA0K,sCAA1K,EAAkO,gC,SC+DlO,EA3De,WACX,OAA4BA,EAAAA,EAAAA,UAAS,IAAG,eAAjCC,EAAM,KAAEC,EAAS,KACxB,GAAwCC,EAAAA,EAAAA,MAAiB,eAAlDC,EAAY,KAAEC,EAAe,KAC9BC,EAAQF,EAAaG,IAAI,SACzBC,GAAWC,EAAAA,EAAAA,MAoBjB,OATAC,EAAAA,EAAAA,YAAU,WACN,GAAc,KAAVJ,GAA0B,OAAVA,EAApB,CACA,IAAMK,EAAS,yCAAG,4GACYC,EAAAA,EAAAA,IAAaN,GAAO,KAAD,WAArCO,EAAO,EAAPA,QACRX,EAAUW,GAAS,2CACtB,kBAHc,mCAIfF,GAL0C,CAM9C,GAAG,CAACL,KAGA,iCACI,gBAAKQ,UAAWC,EAAc,UAC1B,kBAAMD,UAAWC,EAAgBC,SArBxB,SAACC,GAClBA,EAAMC,iBACN,IAAMC,EAAQF,EAAMG,cACpBf,EACc,KAAVC,EAAe,CAAEA,MAAOa,EAAME,SAASf,MAAMgB,OAAU,CAAC,GAE5DH,EAAMI,OACV,EAcoE,WACpD,kBACIT,UAAWC,EACXS,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,eACZC,KAAK,WAET,mBAAQJ,KAAK,SAASV,UAAWC,EAAqB,UAClD,iBAAMD,UAAWC,EAA0B,4BAMvD,wBACKd,GACGA,EAAO4B,KAAI,gBAAGC,EAAE,EAAFA,GAAIC,EAAK,EAALA,MAAK,OACnB,yBACI,SAAC,KAAI,CACDC,GAAE,kBAAaF,GACfG,MAAO,CAAEC,KAAM1B,GAAW,UAC1B,uBAAIuB,OAJHD,EAMJ,QAK7B,C,8MC5DAK,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCACHC,EAAY,kCAEZzB,EAAY,yCAAG,WAAO0B,GAAc,gFACwE,OAA/GC,EAAW,+BAA2BH,EAAO,4DAAoDE,GAAc,SACtFH,EAAAA,EAAAA,IAAUI,GAAa,KAAD,EAAzC,OAAyC,SAAvCtC,EAAM,EAAZuC,KAAI,kBACLvC,GAAM,2CAChB,gBAJwB,sCAMZwC,EAAe,yCAAG,WAAOC,GAAO,gFACe,OAAlDH,EAAW,gBAAYG,EAAO,qBAAaN,EAAO,4BAC1BD,EAAAA,EAAAA,IAAUI,GAAa,KAAD,EAAxC,OAAwC,SAAtCI,EAAK,EAAXH,KAAI,kBACLG,GAAK,2CACf,gBAJ2B,sCAMfC,EAAmB,yCAAG,6FAC0B,OAAnDL,EAAW,qCAAiCH,GAAO,SAC1BD,EAAAA,EAAAA,IAAUI,GAAa,KAAD,EAAzC,OAAyC,SAAvCtC,EAAM,EAAZuC,KAAI,kBACLvC,GAAM,2CAChB,kBAJ+B,mCAMnB4C,EAAY,yCAAG,WAAOH,GAAO,8EACyB,OAAzDH,EAAW,gBAAYG,EAAO,4BAAoBN,GAAO,SACxCD,EAAAA,EAAAA,IAAUI,GAAa,KAAD,EAA/B,OAARO,EAAQ,yBACPA,EAASN,KAAKO,MAAI,2CAC5B,gBAJwB,sCAMZC,EAAU,yCAAG,WAAON,GAAO,8EAC2B,OAAzDH,EAAW,gBAAYG,EAAO,4BAAoBN,GAAO,SACxCD,EAAAA,EAAAA,IAAUI,GAAa,KAAD,EAA/B,OAARO,EAAQ,yBACPA,EAASN,KAAK3B,SAAO,2CAC/B,gBAJsB,qC","sources":["webpack://goit-react-hw-05-movies/./src/pages/Movies.module.css?d157","pages/Movies.jsx","services/movieApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Searchbar\":\"Movies_Searchbar__x0Q8w\",\"SearchForm\":\"Movies_SearchForm__wjo2h\",\"SearchFormButton\":\"Movies_SearchFormButton__8YSXn\",\"SearchFormButtonLabel\":\"Movies_SearchFormButtonLabel__wEI6R\",\"SearchFormInput\":\"Movies_SearchFormInput__bFrPB\"};","import { useEffect, useState } from \"react\";\nimport { useSearchParams, useLocation, Link } from \"react-router-dom\";\nimport { searchMovies } from \"../services/movieApi\";\nimport css from \"./Movies.module.css\";\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get(\"query\");\n    const location = useLocation();\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const input = event.currentTarget;\n        setSearchParams(\n            query !== \"\" ? { query: input.elements.query.value } : {}\n        );\n        input.reset();\n    };\n\n    useEffect(() => {\n        if (query === \"\" || query === null) return;\n        const getMovies = async () => {\n            const { results } = await searchMovies(query);\n            setMovies(results);\n        };\n        getMovies();\n    }, [query]);\n\n    return (\n        <>\n            <div className={css.Searchbar}>\n                <form className={css.SearchForm} onSubmit={handleSubmit}>\n                    <input\n                        className={css.SearchFormInput}\n                        type=\"text\"\n                        autoComplete=\"off\"\n                        autoFocus\n                        placeholder=\"Search movie\"\n                        name=\"query\"\n                    />\n                    <button type=\"submit\" className={css.SearchFormButton}>\n                        <span className={css.SearchFormButtonLabel}>\n                            Search\n                        </span>\n                    </button>\n                </form>\n            </div>\n            <ul>\n                {movies &&\n                    movies.map(({ id, title }) => (\n                        <li key={id}>\n                            <Link\n                                to={`/movies/${id}`}\n                                state={{ from: location }}>\n                                <p>{title}</p>\n                            </Link>\n                        </li>\n                    ))}\n            </ul>\n        </>\n    );\n};\n\nexport default Movies;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\n\nconst API_KEY = \"be0d83ce9c2c607120c6d4ef533d72b4\";\nexport const IMAGE_URL = \"https://image.tmdb.org/t/p/w500\";\n\nexport const searchMovies = async (stringToSearch) => {\n    const queryString = `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${stringToSearch}`;\n    const { data: movies } = await axios.get(queryString);\n    return movies;\n};\n\nexport const getMovieDetails = async (movieId) => {\n    const queryString = `movie/${movieId}$?api_key=${API_KEY}&language=en-US`;\n    const { data: movie } = await axios.get(queryString);\n    return movie;\n};\n\nexport const fetchTrendingMovies = async () => {\n    const queryString = `trending/movie/day?api_key=${API_KEY}`;\n    const { data: movies } = await axios.get(queryString);\n    return movies;\n};\n\nexport const getMovieCast = async (movieId) => {\n    const queryString = `movie/${movieId}/credits?api_key=${API_KEY}`;\n    const response = await axios.get(queryString);\n    return response.data.cast;\n};\n\nexport const getReviews = async (movieId) => {\n    const queryString = `movie/${movieId}/reviews?api_key=${API_KEY}`;\n    const response = await axios.get(queryString);\n    return response.data.results;\n};\n"],"names":["useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useEffect","getMovies","searchMovies","results","className","css","onSubmit","event","preventDefault","input","currentTarget","elements","value","reset","type","autoComplete","autoFocus","placeholder","name","map","id","title","to","state","from","axios","API_KEY","IMAGE_URL","stringToSearch","queryString","data","getMovieDetails","movieId","movie","fetchTrendingMovies","getMovieCast","response","cast","getReviews"],"sourceRoot":""}