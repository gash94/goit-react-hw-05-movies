{"version":3,"file":"static/js/415.45a465bc.chunk.js","mappings":"wNAkCA,UA9Ba,WACT,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,UAAS,IAAG,eAAjCC,EAAM,KAAEC,EAAS,KAUxB,OARAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,yCAAG,4GACYC,EAAAA,EAAAA,MAAsB,KAAD,WAAvCC,EAAO,EAAPA,QACRJ,EAAUI,GAAS,2CACtB,kBAHc,mCAIfF,GACJ,GAAG,KAGC,iCACI,oDACA,wBACKH,GACGA,EAAOM,KAAI,gBAAGC,EAAE,EAAFA,GAAIC,EAAK,EAALA,MAAK,OACnB,yBACI,SAAC,KAAI,CACDC,GAAE,kBAAaF,GACfG,MAAO,CAAEC,KAAMd,GAAW,UAC1B,uBAAIW,OAJHD,EAMJ,QAK7B,C,8MC/BAK,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCACHC,EAAY,kCAEZC,EAAY,yCAAG,WAAOC,GAAc,gFACwE,OAA/GC,EAAW,+BAA2BJ,EAAO,4DAAoDG,GAAc,SACtFJ,EAAAA,EAAAA,IAAUK,GAAa,KAAD,EAAzC,OAAyC,SAAvCjB,EAAM,EAAZkB,KAAI,kBACLlB,GAAM,2CAChB,gBAJwB,sCAMZmB,EAAe,yCAAG,WAAOC,GAAO,gFACe,OAAlDH,EAAW,gBAAYG,EAAO,qBAAaP,EAAO,4BAC1BD,EAAAA,EAAAA,IAAUK,GAAa,KAAD,EAAxC,OAAwC,SAAtCI,EAAK,EAAXH,KAAI,kBACLG,GAAK,2CACf,gBAJ2B,sCAMfjB,EAAmB,yCAAG,6FAC0B,OAAnDa,EAAW,qCAAiCJ,GAAO,SAC1BD,EAAAA,EAAAA,IAAUK,GAAa,KAAD,EAAzC,OAAyC,SAAvCjB,EAAM,EAAZkB,KAAI,kBACLlB,GAAM,2CAChB,kBAJ+B,mCAMnBsB,EAAY,yCAAG,WAAOF,GAAO,8EACyB,OAAzDH,EAAW,gBAAYG,EAAO,4BAAoBP,GAAO,SACxCD,EAAAA,EAAAA,IAAUK,GAAa,KAAD,EAA/B,OAARM,EAAQ,yBACPA,EAASL,KAAKM,MAAI,2CAC5B,gBAJwB,sCAMZC,EAAU,yCAAG,WAAOL,GAAO,8EAC2B,OAAzDH,EAAW,gBAAYG,EAAO,4BAAoBP,GAAO,SACxCD,EAAAA,EAAAA,IAAUK,GAAa,KAAD,EAA/B,OAARM,EAAQ,yBACPA,EAASL,KAAKb,SAAO,2CAC/B,gBAJsB,qC","sources":["pages/Home.jsx","services/movieApi.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { fetchTrendingMovies } from \"../services/movieApi\";\n\nconst Home = () => {\n    const location = useLocation();\n    const [movies, setMovies] = useState([]);\n\n    useEffect(() => {\n        const getMovies = async () => {\n            const { results } = await fetchTrendingMovies();\n            setMovies(results);\n        };\n        getMovies();\n    }, []);\n\n    return (\n        <>\n            <h1>Tranding movies today:</h1>\n            <ul>\n                {movies &&\n                    movies.map(({ id, title }) => (\n                        <li key={id}>\n                            <Link\n                                to={`/movies/${id}`}\n                                state={{ from: location }}>\n                                <p>{title}</p>\n                            </Link>\n                        </li>\n                    ))}\n            </ul>\n        </>\n    );\n};\nexport default Home;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\n\nconst API_KEY = \"be0d83ce9c2c607120c6d4ef533d72b4\";\nexport const IMAGE_URL = \"https://image.tmdb.org/t/p/w500\";\n\nexport const searchMovies = async (stringToSearch) => {\n    const queryString = `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${stringToSearch}`;\n    const { data: movies } = await axios.get(queryString);\n    return movies;\n};\n\nexport const getMovieDetails = async (movieId) => {\n    const queryString = `movie/${movieId}$?api_key=${API_KEY}&language=en-US`;\n    const { data: movie } = await axios.get(queryString);\n    return movie;\n};\n\nexport const fetchTrendingMovies = async () => {\n    const queryString = `trending/movie/day?api_key=${API_KEY}`;\n    const { data: movies } = await axios.get(queryString);\n    return movies;\n};\n\nexport const getMovieCast = async (movieId) => {\n    const queryString = `movie/${movieId}/credits?api_key=${API_KEY}`;\n    const response = await axios.get(queryString);\n    return response.data.cast;\n};\n\nexport const getReviews = async (movieId) => {\n    const queryString = `movie/${movieId}/reviews?api_key=${API_KEY}`;\n    const response = await axios.get(queryString);\n    return response.data.results;\n};\n"],"names":["location","useLocation","useState","movies","setMovies","useEffect","getMovies","fetchTrendingMovies","results","map","id","title","to","state","from","axios","API_KEY","IMAGE_URL","searchMovies","stringToSearch","queryString","data","getMovieDetails","movieId","movie","getMovieCast","response","cast","getReviews"],"sourceRoot":""}