{"version":3,"file":"static/js/137.937efcca.chunk.js","mappings":"qPACA,EAAiC,qCAAjC,EAAiF,+B,SCoEjF,EA/DqB,WACjB,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAK,eAAjCC,EAAK,KAAEC,EAAQ,KAUtB,OARAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAQ,yCAAG,0GACcC,EAAAA,EAAAA,IAAgBP,GAAS,KAAD,EAA7CQ,EAAY,OAElBJ,EAASI,GAAc,2CAC1B,kBAJa,mCAKdF,GACJ,GAAG,CAACN,KAEA,gCACMG,GAGE,iCACI,SAAC,KAAI,CAACM,GAAG,IAAG,UACR,mBAAQC,KAAK,SAAQ,wBAEzB,iBAAKC,UAAWC,EAAmB,WAC/B,gBAAKD,UAAWC,EAAa,UACzB,gBACIC,IACIV,EAAMW,YACAC,EAAAA,GAAYZ,EAAMW,YAAW,0DAGvCE,IAAKb,EAAMc,MACXC,MAAM,GACNC,OAAO,QAIf,4BACI,wBAAKhB,EAAMc,SACX,kDAAwC,GAArBd,EAAMiB,cAAiB,QAC1C,sCACA,iCAAOjB,EAAMkB,aACb,oCACA,iCAAOlB,EAAMmB,OACRC,KAAI,SAACC,GAAK,OAAKA,EAAMC,IAAI,IACzBC,KAAK,oBA5BtB,sDAkCJ,oDACA,4BACI,SAAC,KAAI,CAACjB,GAAI,OAAO,UACb,mBAAQC,KAAK,SAAQ,qBAEzB,SAAC,KAAI,CAACD,GAAI,UAAU,UAChB,mBAAQC,KAAK,SAAQ,2BAG7B,SAAC,KAAM,MAGnB,C,8MCjEAiB,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCACHb,EAAY,kCAEZc,EAAY,yCAAG,WAAOC,GAAc,gFACwE,OAA/GC,EAAW,+BAA2BH,EAAO,4DAAoDE,GAAc,SACtFH,EAAAA,EAAAA,IAAUI,GAAa,KAAD,EAAzC,OAAyC,SAAvCC,EAAM,EAAZC,KAAI,kBACLD,GAAM,2CAChB,gBAJwB,sCAMZzB,EAAe,yCAAG,WAAOP,GAAO,gFACe,OAAlD+B,EAAW,gBAAY/B,EAAO,qBAAa4B,EAAO,4BAC1BD,EAAAA,EAAAA,IAAUI,GAAa,KAAD,EAAxC,OAAwC,SAAtC5B,EAAK,EAAX8B,KAAI,kBACL9B,GAAK,2CACf,gBAJ2B,sCAMf+B,EAAmB,yCAAG,6FAC0B,OAAnDH,EAAW,qCAAiCH,GAAO,SAC1BD,EAAAA,EAAAA,IAAUI,GAAa,KAAD,EAAzC,OAAyC,SAAvCC,EAAM,EAAZC,KAAI,kBACLD,GAAM,2CAChB,kBAJ+B,mCAMnBG,EAAY,yCAAG,WAAOnC,GAAO,8EACyB,OAAzD+B,EAAW,gBAAY/B,EAAO,4BAAoB4B,GAAO,SACxCD,EAAAA,EAAAA,IAAUI,GAAa,KAAD,EAA/B,OAARK,EAAQ,yBACPA,EAASH,KAAKI,MAAI,2CAC5B,gBAJwB,sCAMZC,EAAU,yCAAG,WAAOtC,GAAO,8EAC2B,OAAzD+B,EAAW,gBAAY/B,EAAO,4BAAoB4B,GAAO,SACxCD,EAAAA,EAAAA,IAAUI,GAAa,KAAD,EAA/B,OAARK,EAAQ,yBACPA,EAASH,KAAKM,SAAO,2CAC/B,gBAJsB,qC","sources":["webpack://goit-react-hw-05-movies/./src/components/movieDetails/MovieDetails.module.css?553c","components/movieDetails/MovieDetails.jsx","services/movieApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieContainer\":\"MovieDetails_movieContainer__8BRte\",\"movieImg\":\"MovieDetails_movieImg__-Lp6f\"};","import { useParams, Link, Outlet } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { getMovieDetails, IMAGE_URL } from \"../../services/movieApi\";\n\nimport css from \"./MovieDetails.module.css\";\n\nconst MovieDetails = () => {\n    const { movieId } = useParams();\n    const [movie, setMovie] = useState(null);\n\n    useEffect(() => {\n        const getMovie = async () => {\n            const currentMovie = await getMovieDetails(movieId);\n\n            setMovie(currentMovie);\n        };\n        getMovie();\n    }, [movieId]);\n    return (\n        <>\n            {!movie ? (\n                <div>This movie is not found</div>\n            ) : (\n                <>\n                    <Link to=\"/\">\n                        <button type=\"button\">Go back</button>\n                    </Link>\n                    <div className={css.movieContainer}>\n                        <div className={css.movieImg}>\n                            <img\n                                src={\n                                    movie.poster_path\n                                        ? IMAGE_URL + movie.poster_path\n                                        : `https://bitsofco.de/content/images/2018/12/broken-1.png`\n                                }\n                                alt={movie.title}\n                                widht=\"\"\n                                height=\"\"\n                            />\n                        </div>\n\n                        <div>\n                            <h2>{movie.title}</h2>\n                            <p>User Score: {`${movie.vote_average * 10}`}%</p>\n                            <h3>Overview</h3>\n                            <p>{`${movie.overview}`}</p>\n                            <h3>Genres</h3>\n                            <p>{`${movie.genres\n                                .map((genre) => genre.name)\n                                .join(\" / \")}`}</p>\n                        </div>\n                    </div>\n                </>\n            )}\n\n            <h2>Additional information</h2>\n            <div>\n                <Link to={\"cast\"}>\n                    <button type=\"button\">Cast</button>\n                </Link>\n                <Link to={\"reviews\"}>\n                    <button type=\"button\">Reviews</button>\n                </Link>\n            </div>\n            <Outlet />\n        </>\n    );\n};\n\nexport default MovieDetails;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\n\nconst API_KEY = \"be0d83ce9c2c607120c6d4ef533d72b4\";\nexport const IMAGE_URL = \"https://image.tmdb.org/t/p/w500\";\n\nexport const searchMovies = async (stringToSearch) => {\n    const queryString = `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${stringToSearch}`;\n    const { data: movies } = await axios.get(queryString);\n    return movies;\n};\n\nexport const getMovieDetails = async (movieId) => {\n    const queryString = `movie/${movieId}$?api_key=${API_KEY}&language=en-US`;\n    const { data: movie } = await axios.get(queryString);\n    return movie;\n};\n\nexport const fetchTrendingMovies = async () => {\n    const queryString = `trending/movie/day?api_key=${API_KEY}`;\n    const { data: movies } = await axios.get(queryString);\n    return movies;\n};\n\nexport const getMovieCast = async (movieId) => {\n    const queryString = `movie/${movieId}/credits?api_key=${API_KEY}`;\n    const response = await axios.get(queryString);\n    return response.data.cast;\n};\n\nexport const getReviews = async (movieId) => {\n    const queryString = `movie/${movieId}/reviews?api_key=${API_KEY}`;\n    const response = await axios.get(queryString);\n    return response.data.results;\n};\n"],"names":["movieId","useParams","useState","movie","setMovie","useEffect","getMovie","getMovieDetails","currentMovie","to","type","className","css","src","poster_path","IMAGE_URL","alt","title","widht","height","vote_average","overview","genres","map","genre","name","join","axios","API_KEY","searchMovies","stringToSearch","queryString","movies","data","fetchTrendingMovies","getMovieCast","response","cast","getReviews","results"],"sourceRoot":""}